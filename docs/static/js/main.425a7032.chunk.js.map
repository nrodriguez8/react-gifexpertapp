{"version":3,"sources":["components/AddCategory.js","helpers/getGif.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategory","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","PropsTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gif","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"oNAGaA,EAAc,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YAAiB,EACNC,mBAAS,IADH,mBACnCC,EADmC,KACvBC,EADuB,KAe1C,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAa,SAAAS,GAAI,OAAIP,GAAJ,mBAAmBO,OACpCN,EAAc,MAMlB,SAEI,uBACIO,KAAK,OACLC,MAAST,EACTU,SAnBc,SAACP,GACvBF,EAAeE,EAAEQ,OAAOF,aAwBhCZ,EAAYe,WAAa,CACrBd,YAAac,IAAWC,KAAKC,Y,mCC/BpBC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,mDACqCC,UAAUH,GAD/C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAKEA,EAAKC,OALP,uBAKZC,EALY,EAKZA,KAEDC,EAAMD,EAAKE,KAAK,SAAAC,GAClB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAXtB,kBAeZM,GAfY,4CAAH,sDCEPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEhC,OADAc,QAAQC,IAAIL,EAAOV,GAEf,sBAAKgB,UAAW,yCAAhB,UACI,qBAAKC,IAAKjB,EAAKkB,IAAMR,IACrB,4BAAIA,QCFHS,EAAU,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAAc,ECFX,SAACA,GAAc,IAAD,EAEZjB,mBAAS,CAC/BwB,KAAM,GACNe,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAqBtC,OAdAC,qBAAW,WAEN1B,EAASC,GACL0B,MAAK,SAAAhB,GAEFc,EAAS,CACLjB,KAAMG,EACNY,SAAS,SAKtB,CAACtB,IAEGuB,EDhBwBI,GAAnBd,EAHuB,EAG5BN,KAAae,EAHe,EAGfA,QAIpB,OACI,qCACI,+BAAKtB,EAAL,OACCsB,GAAW,wCAEZ,qBAAKJ,UAAU,YAAf,SAEKL,EAAOJ,KAAK,SAAAC,GAAG,OACZ,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEhBpBiB,EAAe,WAAM,MAEE7C,mBAAS,CAAC,QAFZ,mBAEvBiB,EAFuB,KAEblB,EAFa,KAQ9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,YAAaA,IAC1B,uBAEA,6BAEQkB,EAASS,KAAK,SAACT,GAAD,OACV,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MClBjC6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.425a7032.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropsTypes from \"prop-types\"\r\n\r\nexport const AddCategory = ({setCategory}) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n    const handleInputChange = (e) => {\r\n        setInputValue (e.target.value);\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length > 2){\r\n            setCategory( cats =>[inputValue, ...cats] );\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}  >\r\n            \r\n            <input \r\n                type=\"text\"\r\n                value= { inputValue }\r\n                onChange=  {handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.PropsTypes = {\r\n    setCategory: PropsTypes.func.isRequired\r\n};\r\n\r\n\r\n\r\n","export const getGifs = async( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/trending?q=${encodeURI(category)}&limit=10&api_key=sYJH6kUjja5QGjUJP3THvEWg1UxhoipJ`;\r\n    \r\n    const resp = await fetch(url);\r\n    \r\n    const {data} = await resp.json();\r\n\r\n    const gif = data.map (img =>{\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    })\r\n    \r\n    return gif;\r\n  }","import React from 'react'\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n    console.log(title, url);\r\n    return (\r\n        <div className =\"card animate__animated animate__bounce\" >\r\n            <img src={url} alt ={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n//import { getGifs } from '../helpers/getGif';\r\nimport { GifGridItem  } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    // const [images, setImages] = useState([]);\r\n    const {data:images, loading} = useFetchGifs();\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n            <h3>{category} </h3>\r\n            {loading && <p>Loading</p>}\r\n            \r\n            <div className=\"card-grid\">\r\n                            \r\n                {images.map( img => (\r\n                    <GifGridItem  \r\n                        key={img.id}\r\n                        {...img}\r\n                    />\r\n                ))\r\n                }\r\n            \r\n        \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGif\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        \r\n         getGifs( category )\r\n            .then(img => {\r\n\r\n                setstate({\r\n                    data: img,\r\n                    loading: false\r\n                })\r\n               \r\n                \r\n            })\r\n    }, [category])\r\n\r\n    return state; //{ data: [], loading:ture }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","//rafc\r\nimport React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n    //const category = ['Dragon Ball', 'One Punch', 'Samurai X',];\r\n    const [category, setCategory] = useState(['DBZ']);\r\n        //const handleAdd = () => {\r\n       //setCategory([...category, 'Full Metal ALchemy']);\r\n        // setCategory( cats => [...category, 'Full Metal Alchemy']);\r\n    \r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategory={setCategory} />\r\n            <hr/>\r\n            \r\n            <ol>\r\n                {\r\n                    category.map( (category) => (\r\n                        <GifGrid \r\n                            key={category} \r\n                            category={category}\r\n                         /> \r\n                         ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// "],"sourceRoot":""}